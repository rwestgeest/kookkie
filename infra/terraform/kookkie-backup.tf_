resource "aws_s3_bucket" "kookkie_backup" {
  bucket = "kookkie-backup"
  tags = {
    Name = "TestBucket"
    Infra = "kookkie"
  }

}
resource "aws_s3_bucket_acl" "kookkie_bucket_acl" {
  bucket = aws_s3_bucket.kookkie_backup.id
  acl    = "private"
}

resource "aws_s3_bucket_versioning" "kookkie_bucket_versioning" {
  bucket = aws_s3_bucket.kookkie_backup.id
  versioning_configuration {
    status = "Enabled"    
  }
}

resource "aws_s3_bucket_lifecycle_configuration" "kookkie_bucket_lifecycle" {
  bucket = aws_s3_bucket.kookkie_backup.id
  rule {
    id = "kookkie_bucket_lifecycle"
    noncurrent_version_expiration {
      noncurrent_days = 30
    }
    status = "Enabled"
  }
}

resource "aws_s3_bucket_server_side_encryption_configuration" "kookkie_bucket_encrypted_backup" {
    bucket = aws_s3_bucket.kookkie_backup.id
    rule {
      apply_server_side_encryption_by_default {        
        kms_master_key_id = ""
        sse_algorithm = "AES256"
      }
    }
}

resource "aws_iam_role_policy" "backup_policy" {
  name = "backup_policy"
  role = aws_iam_role.ECRAccessForEC2.name

  policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "s3:*"
      ],
      "Effect": "Allow",
      "Resource": ["${aws_s3_bucket.kookkie_backup.arn}"]
    },
    {
      "Effect": "Allow",
      "Action": [
        "s3:PutObject",
        "s3:GetObject",
        "s3:DeleteObject"
      ],
      "Resource": ["${aws_s3_bucket.kookkie_backup.arn}/*"]
    }
  ]
}
EOF
}
